Tasks statuses: ☐ - in progress, ☑ - completed.

1. Setup configuration classes for each entity in Store.Core.Entities.Model.  ☑
2. Implement flexible Unit of work pattern with Abstract Factory for creating Unit of work classes. ☑
   - Implement ef core repostories for all entities ☑
   - Implemente Ef core abstract factory for ef core unit of works ☑
   - Implement unit of wortk for ef core ☑
3. Implement product service using units of work that are created by unit of work factory ☑
   Impelment what has been done to product service but to all other services. ☑
   - AdminOrderService ☑
   - ProductViewService ☑
   - UserOrderService ☑
   - UserService ☑
4. Setup configurations for PaymentDetails and change
configurations classes for CashDeposit and Order.
Deal with exceptions that are being risen by DbContext while creating PaymentDetails model and
adjusting Cash Deposit, Order models. ☑
5. Create console UI. ☐
   - Implement store context and different menus using state pattern, as menu - is seperate state:
     - Guest menu. ☑
     - User menu. ☑
     - Admin menu. ☑
6. Well, now comes the fun part - write a bunch of tests for all service classes. ☑
   - ProductService ☑
   - AdminOrderService ☑
   - ProductViewService ☑
   - UserOrderService ☑
   - UserService ☑
7. Write documentation as comments ☑